<?xml version="1.0" encoding="UTF-8"?>
<project name="L2jFrozen_DataPack" default="export" basedir=".">
  <description>
        This script will build the L2jFrozen_DataPack.
        
        $Author: L2jFrozen $
        $Date: (th, 17 aug 2010) $
        $Revision: 1 $  
        
        This program is opensource

  </description>

	<property file="build_into_CompiledRev_folder.properties"/>
	<property name="build" location="${compiled_rev_destination_folder}"/>
	<property name="build.dist" location="${build}/dist"/>
  <property name="build.dist.game" location="${build.dist}/gameserver"/>
  <property name="build.dist.login" location="${build.dist}/loginserver"/>
  <property name="build.dist.sql" location="${build.dist}/sql"/>
  <property name="build.dist.tools" location="${build.dist}/tools"/>
  <property name="properties-file" location="${build.dist.game}/config/version/l2jfrozen-datapack.properties"/>

    <target name="init"
      description="Create the output directories. Do nothing if dirs were already created">
      <mkdir dir="${build}"/>
      <mkdir dir="${build.dist}"/>
      <mkdir dir="${build.dist.game}"/>
      <mkdir dir="${build.dist.login}" />
    </target>

    <target name="export"
      depends="version"
      description="Syncronizes build space contents with project.">
      <copy todir="${build.dist.game}/data">
         <fileset dir="${basedir}/data">
           <exclude name=".project"/>
           <exclude name="log/**"/>
           <exclude name="cachedir/**"/>
           <exclude name="clans/**"/>
           <exclude name="crests/**"/>
           <exclude name="**.svn**"/>
           <exclude name="**/*.class"/>
           <exclude name="**/*.jar"/>
           <exclude name="geodata/**"/>
           <exclude name="pathnode/**"/>
           <include name="**/*.*"/>
         </fileset>
      </copy>
      <copy todir="${build.dist.sql}">
         <fileset dir="${basedir}/sql">
            <include name="*.*"/>
            <include name="customs/*.*"/>
         	<include name="customs_zones/*.*"/>
         	<include name="updates/*.*"/>
         </fileset>
      </copy>
      <copy todir="${build.dist.tools}">
         <fileset dir="${basedir}/tools">
           <include name="*.*"/>
           <exclude name="database_installer.rc"/>
           <exclude name="*.txt"/>
           <exclude name="*.log"/>
           <exclude name="*backup.sql"/>
         </fileset>
      </copy>
      <copy todir="${build.dist.login}">
        <fileset dir="${build.dist.game}/data">
          <include name="servername.xml"/>
        </fileset>
      </copy>
   </target>  

    <target name="dist"
          depends="export"
          description="Creates a ZIP file. Suitable for distribution but building takes longer. See dist-deflate for faster builds.">
      <zip destfile="${build}/L2JFrozen_DataPack.zip" basedir="${build.dist}" update="true"/>
    </target>

    <target name="dist-deflate"
          depends="export"
          description="Creates a datapack ZIP file with NO compression (bigger ZIP file but faster than regular dist target)">
      <zip destfile="${build}/L2JFrozen_DataPack-nocompress.zip" basedir="${build.dist}" update="true" compress="false"/>
    </target>
  
  

	<target name="version" 
		depends="init"
		description="Create l2jfrozen-datapack.properties file">
		
    	<tstamp>
    	  <format property="build.tstamp"
    	              pattern="yyyyMMdd_HHmm"/>
    	</tstamp>


    	<exec dir="." executable="svnversion" outputproperty="l2jfrozen.revision"
			  failifexecutionfails="false">
    	  <arg line="-n ."/>
    	</exec>
    	
    	<concat destfile="${build.dist.game}/config/version/l2jfrozen-datapack.properties">
    	version=${l2jfrozen.revision}
    	builddate=${build.tstamp} 
      detailed info:
</concat>
      <concat destfile="${build.dist.game}/config/version/l2jfrozen-datapack.properties" append="true">
        <filelist dir="${src}/../.svn/" files="entries"/>
        <filterchain>
          <prefixlines prefix="          "/>
          <headfilter lines="8" skip="4"/>
          <tokenfilter>
             <ignoreblank/>
          </tokenfilter>
        </filterchain>
</concat>
</target>

	
    <target name="clean" 
      description="Deletes the whole build space and existing packages.">
      <delete dir="${build}"/>
    </target>

  <target name="distclean" 
      description="Deletes the datapack distribution ZIP file only, preserving synchronized build files.">
    <delete file="${build}/L2JFrozen_DataPack.zip"/>
      <delete file="${build}/L2JFrozen_DataPack-nocompress.zip"/>
    </target>
</project>
